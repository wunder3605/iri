/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        url = 'https://jitpack.io'
    }

    maven {
        url = 'https://raw.github.com/triasteam/maven/snapshot'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    compile 'com.iri.utils:utils-crypto:0.0.1-SNAPSHOT'
    compile 'org.bouncycastle:bcprov-jdk15on:1.58'
    compile 'org.apache.commons:commons-lang3:3.5'
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'commons-io:commons-io:2.5'
    compile 'org.rocksdb:rocksdbjni:5.7.3'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.6'
    compile 'io.undertow:undertow-core:1.4.26.Final'
    compile 'io.undertow:undertow-servlet:1.4.26.Final'
    compile 'io.undertow:undertow-websockets-jsr:1.4.26.Final'
    compile 'org.neo4j:neo4j:3.4.10'
    compile 'uk.co.froot.maven.enforcer:digest-enforcer-rules:0.0.1'
    compile 'org.ini4j:ini4j:0.5.4'
    compile 'org.zeromq:jeromq:0.4.3'
    compile 'com.beust:jcommander:1.72'
    compile 'org.neo4j.driver:neo4j-java-driver:1.4.4'
    compile 'com.github.ipfs:java-ipfs-http-client:1.2.2'
    compile 'org.json:json:20180813'
    testCompile 'com.jayway.restassured:rest-assured:2.9.0'
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.openjdk.jmh:jmh-core:1.21'
    testCompile 'org.openjdk.jmh:jmh-generator-annprocess:1.21'
}

group = 'com.iota'
version = '1.5.5'
description = 'IRI'
sourceCompatibility = '1.8'

configurations.all {
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
